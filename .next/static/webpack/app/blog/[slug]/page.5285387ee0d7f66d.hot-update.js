"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/blog/[slug]/page",{

/***/ "(app-pages-browser)/./lib/blogs.ts":
/*!**********************!*\
  !*** ./lib/blogs.ts ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blogPosts: () => (/* binding */ blogPosts),\n/* harmony export */   getAllBlogs: () => (/* binding */ getAllBlogs),\n/* harmony export */   getBlogBySlug: () => (/* binding */ getBlogBySlug),\n/* harmony export */   getBlogsByCategory: () => (/* binding */ getBlogsByCategory),\n/* harmony export */   getBlogsByTag: () => (/* binding */ getBlogsByTag)\n/* harmony export */ });\nconst blogPosts = [\n    {\n        id: 1,\n        title: \"If Everyone Can Prompt, Do We Still Need Designers?\",\n        slug: \"if-everyone-can-prompt-do-we-still-need-designers\",\n        excerpt: \"In this prompt-driven world, anyone can generate. But only designers can interpret, refine, and lead.\",\n        content: \"\\n      <p>Here’s what no one’s saying out loud: Prompting is not design.</p>\\n      \\n      <p>Anyone can open Stitch and generate a screen in seconds. Figma Make will turn a napkin sketch into a full UI. Cursor can write production-ready code from a design prompt.</p>\\n      <p>So, does that mean the role of the designer is dead?</p>\\n      <p>No — it means it’s evolving. Fast.</p>\\n      <p>These tools democratise execution. But they don't replace critical thinking. They don’t know your user. They don’t challenge assumptions. They don't test, iterate, or align with business goals. In this prompt-driven world, anyone can generate.</p>\\n      <p>But only designers can interpret, refine, and lead.</p>\\n\\n      \\n      <h2>Want to stay valuable? Do this:</h2>\\n      <h3>Learn the tools — Stitch, Figam Make, V0, Cursor — but don’t stop there.</h3>\\n      <p>Getting started is easy, but mastering them isn’t. Tools like Stitch are built with engineering logic underneath; knowing how developers think gives you a major edge when refining generated outputs.</p>\\n      \\n      <h3>Become a curator, not just a creator.</h3>\\n      <p>AI can generate 10 screens in 10 seconds — your job is to choose which one works, refine why it works, and craft a cohesive experience from it. Think of Stitch as your intern: it can throw out raw ideas, but you shape the final outcome that fits the brand, the goal, and the user.</p>\\n\\n      <h3>Focus on the “why” behind every interface.</h3>\\n      <p>AI can output a navigation bar — but it won’t understand why users expect one thing in fintech and another in social media. UX isn’t just about structure, it’s about emotion, trust, and behaviour — things AI hasn’t mastered (yet). Your advantage? You know why users bounce, tap, ignore, or convert. Keep asking “why” at every step — then design with that clarity in mind.</p>\\n\\n      <h3>Connect user behaviour with business outcomes.</h3>\\n      <p>Great design isn’t just beautiful or usable — it drives revenue, retention, and growth. The best designers don’t just build for the user; they translate insights into business wins.</p>\\n\\n      <p>The future of design isn’t about being faster.</p>\\n      <p>It’s about being smarter with the speed.</p>\\n\\n      <p>We don’t need fewer designers.</p>\\n      <p>We need ones who can think — and lead — in the age of AI.</p>\\n    \",\n        author: \"Nqobile Vundla\",\n        publishedAt: \"30 May 2025\",\n        readTime: \"2 min read\",\n        category: \"Design Trends\",\n        tags: [\n            \"Design Tools\",\n            \"AI and Design\",\n            \"Future of UX\",\n            \"Human-Centered Design\",\n            \"Design Leadership\"\n        ],\n        coverImage: \"/blog/prompt-driven-design.jpg\"\n    },\n    {\n        id: 2,\n        title: \"Why You Should Always Be Ready to Get Laid Off\",\n        slug: \"why-you-should-always-be-ready-to-get-laid-off\",\n        excerpt: \"You’re not immune. No one is. That’s why the smartest designers aren’t just designing — they’re future-proofing.\",\n        content: \"\\n      <p>Here’s the brutal truth:</p>\\n      <p>Tech isn’t stable. Design jobs? Even less so.</p>\\n      <p>In 2023 alone, over 262,000 tech workers were laid off. The trend hasn’t slowed down — 2024 saw more than 150,000 layoffs across hundreds of companies. Even in 2025, roles are being cut daily. Designers, PMs, and engineers who thought they were “safe” were suddenly jobless.</p>\\n      <p>You’re not immune. No one is.</p>\\n\\n      <p>That’s why the smartest designers aren’t just designing — they’re future-proofing.</p>\\n      <p>Because waiting for a layoff to start preparing is how you get left behind.</p>\\n\\n\\n      <h2>Want to stay ready? Here’s how:</h2>\\n      <h3>Keep your portfolio sharp — always</h3>\\n      <p>Don’t wait until your contract ends or your calendar clears. Update your portfolio every time you finish a project — while the strategy, design thinking, and outcomes are still fresh in your head. This way, when an opportunity (or crisis) comes, you’re not scrambling through old files — you’re ready to send.</p>\\n      \\n      <h3>Network before you need to</h3>\\n      <p>Networking isn’t just for when you’re job hunting — it’s career insurance. Set a standing reminder to connect, attend a local UX meetup, join a webinar, or just check in with someone in your field once a month.</p>\\n      \\n      <h3>Join design communities (Slack, Discord, LinkedIn)</h3>\\n      <p>Most of today’s hiring signals start in DMs and group chats — not job boards. The best design communities don’t just offer support — they post leads, freelance gigs, and internal referrals before roles go public.</p>\\n      \\n      <h3>Share your work, your process, your thinking — build visibility</h3>\\n      <p>Don’t just design in silence. Post your work on LinkedIn, write case studies on Behance, tweet your UX insights — show the thinking behind your designs.</p>\\n      \\n      <h3>Don’t tie your identity to one company, one tool, or one title</h3>\\n      <p>Here’s a hard truth: you are not your job title. That tool you’ve mastered might be irrelevant in 6 months. That company you love might cut your role to save margin.</p>\\n      \\n      <p>Companies are solving for their bottom line — not your long-term career. Stay flexible, stay learning, and never let one logo define your value.</p>\\n      <p>Being laid off isn’t the end — it’s part of the industry now. But being caught off guard? That’s optional.</p>\\n      <p>The designers who thrive aren’t lucky. They’re ready, visible, and always in motion.</p>\\n      \\n    \",\n        author: \"Nqobile Vundla\",\n        publishedAt: \"30 April 2025\",\n        readTime: \"2 min read\",\n        category: \"Job Security\",\n        tags: [\n            \"Career Resilience\",\n            \"Design Industry Trends\",\n            \"Portfolio Tips\",\n            \"Networking for Designers\"\n        ],\n        coverImage: \"/blog/getting-laid-off.jpg\"\n    },\n    {\n        id: 3,\n        title: \"The Designers of Today Might Not Be the Designers of the Future\",\n        slug: \"the-designers-of-today-might-not-be-the-designers-of-the-future\",\n        excerpt: \"Design is evolving — fast. The tools, workflows, and even the definition of “UX” are shifting.\",\n        content: \"\\n      <p>Here’s the truth no one wants to say out loud:</p>\\n      <p>Your current skillset might expire faster than you think.</p>\\n      <p>Design is evolving — fast. The tools, workflows, and even the definition of “UX” are shifting.</p>\\n      <p>If you’re stuck in the processes of yesterday, you won’t be around for the outcomes of tomorrow.</p>\\n      <p>Who are the designers who will lead the future?</p>\\n      <p>They think differently — and they move differently.</p>\\n      \\n      <h2>Want to stay future-proof? Here’s how:</h2>\\n      <h3>Ditch fixed processes — focus on flexibility</h3>\\n      <p> Rigid design methods are fading. What worked in Figma last year might be solved faster by AI-generated layouts in V0. Be ready to unlearn, remix, and redesign your own process based on the outcome — not the playbook.</p>\\n      \\n      <h3>Prioritise continuous learning</h3>\\n      <p>The most dangerous mindset in tech is “I already know how to do that.” If you're not exploring tools like Cursor (for AI-paired code), Framer (for interactive, no-code sites), or V0, you’re already behind. Set a personal goal: one new tool or skill explored every month.</p>\\n      \\n      <h3>Design for outcomes, not outputs</h3>\\n      <p>Don’t get attached to pixels. Get obsessed with results. The interfaces of the future will be designed around what they achieve — not how pretty they look. Start thinking: what does success look like for this user and this business?</p>\\n      \\n      <h3>Stay tool-agnostic</h3>\\n      <p>Today it’s Figma. Tomorrow it might be Framer, V0, or something entirely new. Master the thinking — research, insight, systems — and you’ll adapt to any tool the future throws at you.</p>\\n      \\n      <h3>Move with the industry, not against it</h3>\\n      <p>Designers who resist change lose relevance. The ones who lean in become the new standard. Follow what’s happening in AI, product thinking, and no-code/low-code platforms. Not to chase trends — but to stay useful.</p>\\n      \\n      <p>The future isn’t waiting for anyone. The question is: are you designing it, or getting designed out of it?</p>\\n    \",\n        author: \"Nqobile Vundla\",\n        publishedAt: \"31 March 2025\",\n        readTime: \"2 min read\",\n        category: \"Future of Design\",\n        tags: [\n            \"Future of Design\",\n            \"AI in Design\",\n            \"Continuous Learning\",\n            \"Outcome-Based Design\"\n        ],\n        coverImage: \"/blog/design-process.jpg\"\n    },\n    {\n        id: 4,\n        title: \"AI Is a Leveler — We All Have 0 Years of AI Experience\",\n        slug: \"ai-is-a-leveler-we-all-have-0-years-of-ai-experience\",\n        excerpt: \"It doesn’t matter how long you’ve been in UX, product, or visual design — tools like ChatGPT, Framer, and V0 aren't concerned about your resume. They care about your ability to adapt fast.\",\n        content: \"  \\n      <p>Color is one of the most powerful tools in a designer's arsenal. It can evoke emotions, guide user attention, and even influence behavior. Understanding color psychology is essential for creating effective digital interfaces.</p>\\n      \\n      <h2>The Emotional Impact of Color</h2>\\n      <p>Different colors trigger different emotional responses. Blue conveys trust and stability (think Facebook, LinkedIn), while red creates urgency and excitement (Netflix, YouTube). Green suggests growth and harmony, making it popular for financial and health apps.</p>\\n      \\n      <h2>Cultural Considerations</h2>\\n      <p>Color meanings vary across cultures. While white represents purity in Western cultures, it's associated with mourning in some Eastern cultures. When designing for global audiences, it's crucial to research color associations in your target markets.</p>\\n      \\n      <h2>Accessibility and Color</h2>\\n      <p>Color should never be the only way to convey information. Users with color blindness or visual impairments need alternative cues like icons, text labels, or patterns. This principle improves usability for all users.</p>\\n      \\n      <h2>Creating Effective Color Palettes</h2>\\n      <p>A good color palette typically includes a primary color (your brand color), secondary colors for variety, and neutral colors for balance. The 60-30-10 rule is a helpful guideline: 60% neutral, 30% secondary, and 10% accent colors.</p>\\n      \\n      <h2>Testing Color Choices</h2>\\n      <p>A/B testing different color schemes can provide valuable insights into user preferences and behavior. Small changes, like button color, can significantly impact conversion rates.</p>\\n      \\n      <p>Remember, the best color choices are those that serve your users and support your product's goals, not just follow the latest trends.</p>\\n    \",\n        author: \"Nqobile Vundla\",\n        publishedAt: \"2023-12-20\",\n        readTime: \"6 min read\",\n        category: \"Design Theory\",\n        tags: [\n            \"Color Theory\",\n            \"Psychology\",\n            \"UI Design\",\n            \"User Behavior\"\n        ],\n        coverImage: \"/blog/color-psychology.jpg\"\n    },\n    {\n        id: 5,\n        title: \"Designing for Different Screen Sizes: A Responsive Approach\",\n        slug: \"designing-different-screen-sizes-responsive-approach\",\n        excerpt: \"Best practices for creating designs that work seamlessly across all devices, from smartwatches to large desktop displays.\",\n        content: \"\\n      <p>In today's multi-device world, designing for a single screen size is no longer sufficient. Users expect seamless experiences whether they're on a phone, tablet, laptop, or desktop. Here's how I approach responsive design to ensure optimal experiences across all devices.</p>\\n      \\n      <h2>Mobile-First Approach</h2>\\n      <p>I always start with mobile designs. This forces me to prioritize the most important content and features, creating a solid foundation that can be enhanced for larger screens. It's much easier to add complexity than to remove it.</p>\\n      \\n      <h2>Understanding Breakpoints</h2>\\n      <p>Rather than designing for specific devices, I focus on content breakpoints—points where the design needs to adapt to maintain readability and usability. Common breakpoints include 320px (small mobile), 768px (tablet), and 1024px (desktop).</p>\\n      \\n      <h2>Flexible Grid Systems</h2>\\n      <p>Grid systems provide structure while allowing flexibility. I use percentage-based widths and flexible margins to create layouts that adapt smoothly between breakpoints. CSS Grid and Flexbox are invaluable tools for this.</p>\\n      \\n      <h2>Scalable Typography</h2>\\n      <p>Typography needs to be readable at all sizes. I use relative units (em, rem) and CSS clamp() function to create fluid typography that scales appropriately with screen size.</p>\\n      \\n      <h2>Touch vs. Mouse Interactions</h2>\\n      <p>Different devices require different interaction patterns. Touch targets need to be larger (minimum 44px), while mouse interactions can be more precise. Hover states work on desktop but not on touch devices.</p>\\n      \\n      <h2>Performance Considerations</h2>\\n      <p>Responsive design isn't just about layout—it's also about performance. I optimize images for different screen densities and use techniques like lazy loading to ensure fast load times on all devices.</p>\\n      \\n      <p>The goal is to create one design system that provides an optimal experience regardless of how users access your product.</p>\\n    \",\n        author: \"Nqobile Vundla\",\n        publishedAt: \"2023-12-15\",\n        readTime: \"7 min read\",\n        category: \"Responsive Design\",\n        tags: [\n            \"Responsive Design\",\n            \"Mobile-First\",\n            \"CSS\",\n            \"Performance\"\n        ],\n        coverImage: \"/blog/responsive-design.jpg\"\n    }\n];\nconst getBlogBySlug = (slug)=>{\n    return blogPosts.find((post)=>post.slug === slug);\n};\nconst getAllBlogs = ()=>{\n    return blogPosts.sort((a, b)=>new Date(b.publishedAt).getTime() - new Date(a.publishedAt).getTime());\n};\nconst getBlogsByCategory = (category)=>{\n    return blogPosts.filter((post)=>post.category === category);\n};\nconst getBlogsByTag = (tag)=>{\n    return blogPosts.filter((post)=>post.tags.includes(tag));\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/blogs.ts\n"));

/***/ })

});